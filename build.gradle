buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

//JEI附加开始 --下方99行还有一个JEI附加代码
//repositories {
//    maven {
//        url = "https://dvs1.progwml6.com/files/maven/"
//    }
//}
//JEI附加结束

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

//version = '1.0.0'
//group = 'com.kuxiao.othermod'
//archivesBaseName = 'othermod'

version = modMinecraftVersion + "-" + modVersion
group = modGroup
archivesBaseName = modFileName

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    //mappings channel: 'snapshot', version: '20190719-1.14.3'
	mappings channel: mappingsChannel, version: mappingsVersion
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    //minecraft 'net.minecraftforge:forge:1.14.4-28.2.0'
	minecraft "net.minecraftforge:forge:" + modMinecraftVersion + "-" + modForgeVersion
    //runtimeOnly fg.deobf("mezz.jei:jei-1.14.4:6.0.0.11")//jei

}


jar {
    manifest {
        attributes([
            //"Specification-Title": "othermod",
            //"Specification-Vendor": "othermodsareus",
			"Specification-Title": modId,
            "Specification-Vendor": modGroup,
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            //"Implementation-Vendor" :"othermodsareus",
            "Implementation-Vendor" :modGroup,
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

task apiJar(type: Jar, dependsOn: 'classes') {
    classifier = 'api'
    from(sourceSets.main.output) {
        include 'com/raoulvdberge/refinedstorage/api/**'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task deobfJar(type:Jar) {
    from sourceSets.main.output
    classifier 'deobf'
}

artifacts {
    archives jar
    archives sourcesJar
    archives deobfJar
    archives apiJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}